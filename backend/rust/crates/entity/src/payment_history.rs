//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use super::sea_orm_active_enums::PaymentStatus;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "payment_history")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub id: Uuid,
  pub fr_token_id: Uuid,
  pub user_id: Uuid,
  pub price: i64,
  pub fr_tokens: i32,
  pub status: PaymentStatus,
  pub transaction_id: String,
  pub session_id: String,
  pub created_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::fr_token_plan::Entity",
    from = "Column::FrTokenId",
    to = "super::fr_token_plan::Column::Id",
    on_update = "NoAction",
    on_delete = "Cascade"
  )]
  FrTokenPlan,
  #[sea_orm(
    belongs_to = "super::user::Entity",
    from = "Column::UserId",
    to = "super::user::Column::Id",
    on_update = "NoAction",
    on_delete = "Cascade"
  )]
  User,
}

impl Related<super::fr_token_plan::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::FrTokenPlan.def()
  }
}

impl Related<super::user::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::User.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
