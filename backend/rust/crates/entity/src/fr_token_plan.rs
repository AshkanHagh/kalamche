//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "fr_token_plan")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub id: Uuid,
  pub name: String,
  pub description: String,
  pub fr_tokens: i32,
  pub price: i64,
  pub price_per_fr_token: i16,
  pub created_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(has_many = "super::payment_history::Entity")]
  PaymentHistory,
}

impl Related<super::payment_history::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::PaymentHistory.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
